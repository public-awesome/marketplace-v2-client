/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type AllowDenoms = {
  includes: string[];
} | {
  excludes: string[];
};
export interface InstantiateMsg {
  allow_denoms: AllowDenoms;
  config: ConfigForString;
}
export interface ConfigForString {
  fee_manager: string;
  maker_reward_bps: number;
  max_royalty_fee_bps: number;
  protocol_fee_bps: number;
  royalty_registry: string;
  taker_reward_bps: number;
}
export type ExecuteMsg = {
  update_config: {
    config: ConfigForString;
  };
} | {
  update_allow_denoms: {
    allow_denoms: AllowDenoms;
  };
} | {
  set_ask: {
    collection: string;
    details: OrderDetailsForString;
    token_id: string;
  };
} | {
  remove_ask: {
    id: string;
  };
} | {
  update_ask: {
    details: OrderDetailsForString;
    id: string;
  };
} | {
  accept_ask: {
    finder?: string | null;
    id: string;
    max_input: Coin;
    recipient?: string | null;
  };
} | {
  set_bid: {
    collection: string;
    details: OrderDetailsForString;
    token_id: string;
  };
} | {
  remove_bid: {
    id: string;
  };
} | {
  update_bid: {
    details: OrderDetailsForString;
    id: string;
  };
} | {
  accept_bid: {
    finder?: string | null;
    id: string;
    min_output: Coin;
    recipient?: string | null;
  };
} | {
  set_collection_bid: {
    collection: string;
    details: OrderDetailsForString;
  };
} | {
  remove_collection_bid: {
    id: string;
  };
} | {
  update_collection_bid: {
    details: OrderDetailsForString;
    id: string;
  };
} | {
  accept_collection_bid: {
    finder?: string | null;
    id: string;
    min_output: Coin;
    recipient?: string | null;
    token_id: string;
  };
} | {
  sell_nft: {
    collection: string;
    finder?: string | null;
    min_output: Coin;
    recipient?: string | null;
    token_id: string;
  };
} | {
  buy_specific_nft: {
    collection: string;
    finder?: string | null;
    max_input: Coin;
    recipient?: string | null;
    token_id: string;
  };
} | {
  buy_collection_nft: {
    collection: string;
    finder?: string | null;
    max_input: Coin;
    recipient?: string | null;
  };
};
export type Uint128 = string;
export interface OrderDetailsForString {
  finder?: string | null;
  price: Coin;
  recipient?: string | null;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type QueryMsg = {
  config: {};
} | {
  allow_denoms: {};
} | {
  ask: string;
} | {
  asks: string[];
} | {
  asks_by_collection_denom: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForPriceOffset | null;
  };
} | {
  asks_by_creator_collection: {
    collection: string;
    creator: string;
    query_options?: QueryOptionsForString | null;
  };
} | {
  bid: string;
} | {
  bids: string[];
} | {
  bids_by_token_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForPriceOffset | null;
    token_id: string;
  };
} | {
  bids_by_creator_collection: {
    collection: string;
    creator: string;
    query_options?: QueryOptionsForString | null;
  };
} | {
  collection_bid: string;
} | {
  collection_bids: string[];
} | {
  collection_bids_by_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForPriceOffset | null;
  };
} | {
  collection_bids_by_creator_collection: {
    collection: string;
    creator: string;
    query_options?: QueryOptionsForString | null;
  };
};
export type QueryBoundForPriceOffset = {
  inclusive: PriceOffset;
} | {
  exclusive: PriceOffset;
};
export type QueryBoundForString = {
  inclusive: string;
} | {
  exclusive: string;
};
export interface QueryOptionsForPriceOffset {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForPriceOffset | null;
  min?: QueryBoundForPriceOffset | null;
}
export interface PriceOffset {
  amount: number;
  id: string;
}
export interface QueryOptionsForString {
  descending?: boolean | null;
  limit?: number | null;
  max?: QueryBoundForString | null;
  min?: QueryBoundForString | null;
}
export type NullableAsk = Ask | null;
export type Addr = string;
export interface Ask {
  collection: Addr;
  creator: Addr;
  details: OrderDetailsForAddr;
  id: string;
  token_id: string;
}
export interface OrderDetailsForAddr {
  finder?: Addr | null;
  price: Coin;
  recipient?: Addr | null;
}
export type ArrayOfAsk = Ask[];
export type NullableBid = Bid | null;
export interface Bid {
  collection: Addr;
  creator: Addr;
  details: OrderDetailsForAddr;
  id: string;
  token_id: string;
}
export type ArrayOfBid = Bid[];
export type NullableCollectionBid = CollectionBid | null;
export interface CollectionBid {
  collection: Addr;
  creator: Addr;
  details: OrderDetailsForAddr;
  id: string;
}
export type ArrayOfCollectionBid = CollectionBid[];
export interface ConfigForAddr {
  fee_manager: Addr;
  maker_reward_bps: number;
  max_royalty_fee_bps: number;
  protocol_fee_bps: number;
  royalty_registry: Addr;
  taker_reward_bps: number;
}